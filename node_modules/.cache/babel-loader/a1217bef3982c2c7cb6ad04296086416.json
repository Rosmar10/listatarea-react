{"ast":null,"code":"var _jsxFileName = \"/Users/marianmarino/listatarea-react/src/components/Body.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { tareasIniciales } from \"../tareasIniciales\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = () => {\n  _s();\n\n  const [nuevaTarea, setNuevaTarea] = useState(\"\");\n  const [listaTareas, setListaTareas] = useState(tareasIniciales); //Función al enviar el formulario\n\n  const enviarFormulario = e => {\n    e.preventDefault();\n    setListaTareas([...listaTareas, {\n      nombre: nuevaTarea,\n      completada: false\n    }]);\n    console.log(listaTareas);\n  }; //Función al escribir sobre el input del formulario\n\n\n  const capturaInput = e => {\n    setNuevaTarea(e.target.value);\n  }; //Función cambiar estado de tarea completada\n\n\n  const eliminarTarea = nombre => {\n    const tareasFiltradas = listaTareas.filter(tarea => tarea.nombre !== nombre);\n    setListaTareas(tareasFiltradas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: enviarFormulario,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"nuevaTarea\",\n        onChange: capturaInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Agregar Tarea \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: listaTareas.map(tarea => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => eliminarTarea(tarea.nombre),\n        children: [\" \", tarea.nombre, \" \"]\n      }, tarea.nombre, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Body, \"AVzMSl9qYITotX7KLgKuT2T+CJs=\");\n\n_c = Body;\nexport default Tareas;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useState","tareasIniciales","Body","nuevaTarea","setNuevaTarea","listaTareas","setListaTareas","enviarFormulario","e","preventDefault","nombre","completada","console","log","capturaInput","target","value","eliminarTarea","tareasFiltradas","filter","tarea","map","Tareas"],"sources":["/Users/marianmarino/listatarea-react/src/components/Body.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport {tareasIniciales} from \"../tareasIniciales\"\n\nconst Body = () => {\n          \n    const [nuevaTarea, setNuevaTarea] = useState(\"\")\n    const [listaTareas, setListaTareas] = useState(tareasIniciales)\n\n    //Función al enviar el formulario\n    const enviarFormulario = (e) => {\n        e.preventDefault()\n        setListaTareas([...listaTareas, {nombre: nuevaTarea, completada: false}])\n        console.log(listaTareas)\n    }\n\n    //Función al escribir sobre el input del formulario\n    const capturaInput = (e) => {\n      setNuevaTarea(e.target.value)\n    }\n  \n    //Función cambiar estado de tarea completada\n    const eliminarTarea = nombre => {\n      const tareasFiltradas = listaTareas.filter(tarea => tarea.nombre !== nombre)\n      setListaTareas(tareasFiltradas)\n    }\n  \n    return (\n      <div>\n        <form onSubmit={enviarFormulario}>\n          <input name=\"nuevaTarea\" onChange={capturaInput} /> \n          <button> Agregar Tarea </button>\n        </form>\n            \n        <ul>\n          {listaTareas.map(tarea =>\n            <li key={tarea.nombre} onClick={() => eliminarTarea(tarea.nombre)}> {tarea.nombre} </li>)}\n        </ul>\n      </div>\n    )\n  }\n  \n  export default Tareas"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,eAAR,QAA8B,oBAA9B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEf,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAACC,eAAD,CAA9C,CAHe,CAKf;;EACA,MAAMM,gBAAgB,GAAIC,CAAD,IAAO;IAC5BA,CAAC,CAACC,cAAF;IACAH,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiB;MAACK,MAAM,EAAEP,UAAT;MAAqBQ,UAAU,EAAE;IAAjC,CAAjB,CAAD,CAAd;IACAC,OAAO,CAACC,GAAR,CAAYR,WAAZ;EACH,CAJD,CANe,CAYf;;;EACA,MAAMS,YAAY,GAAIN,CAAD,IAAO;IAC1BJ,aAAa,CAACI,CAAC,CAACO,MAAF,CAASC,KAAV,CAAb;EACD,CAFD,CAbe,CAiBf;;;EACA,MAAMC,aAAa,GAAGP,MAAM,IAAI;IAC9B,MAAMQ,eAAe,GAAGb,WAAW,CAACc,MAAZ,CAAmBC,KAAK,IAAIA,KAAK,CAACV,MAAN,KAAiBA,MAA7C,CAAxB;IACAJ,cAAc,CAACY,eAAD,CAAd;EACD,CAHD;;EAKA,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAEX,gBAAhB;MAAA,wBACE;QAAO,IAAI,EAAC,YAAZ;QAAyB,QAAQ,EAAEO;MAAnC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA,UACGT,WAAW,CAACgB,GAAZ,CAAgBD,KAAK,iBACpB;QAAuB,OAAO,EAAE,MAAMH,aAAa,CAACG,KAAK,CAACV,MAAP,CAAnD;QAAA,gBAAqEU,KAAK,CAACV,MAA3E;MAAA,GAASU,KAAK,CAACV,MAAf;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CApCH;;GAAMR,I;;KAAAA,I;AAsCJ,eAAeoB,MAAf"},"metadata":{},"sourceType":"module"}